//
// Autogenerated by Thrift Compiler (0.9.2)
//
// DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
//
var thrift = require('thrift');
var Thrift = thrift.Thrift;
var Q = thrift.Q;

var UserInfo_ttypes = require('./UserInfo_types')


var ttypes = require('./UserAPI_types');
//HELPER FUNCTIONS AND STRUCTURES

UserAPI_signup_args = function(args) {
  this.email = null;
  this.password = null;
  if (args) {
    if (args.email !== undefined) {
      this.email = args.email;
    }
    if (args.password !== undefined) {
      this.password = args.password;
    }
  }
};
UserAPI_signup_args.prototype = {};
UserAPI_signup_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRING) {
        this.email = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRING) {
        this.password = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

UserAPI_signup_args.prototype.write = function(output) {
  output.writeStructBegin('UserAPI_signup_args');
  if (this.email !== null && this.email !== undefined) {
    output.writeFieldBegin('email', Thrift.Type.STRING, 1);
    output.writeString(this.email);
    output.writeFieldEnd();
  }
  if (this.password !== null && this.password !== undefined) {
    output.writeFieldBegin('password', Thrift.Type.STRING, 2);
    output.writeString(this.password);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

UserAPI_signup_result = function(args) {
  this.success = null;
  this.uex = null;
  if (args instanceof UserInfo_ttypes.UserException) {
    this.uex = args;
    return;
  }
  if (args) {
    if (args.success !== undefined) {
      this.success = args.success;
    }
    if (args.uex !== undefined) {
      this.uex = args.uex;
    }
  }
};
UserAPI_signup_result.prototype = {};
UserAPI_signup_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.STRUCT) {
        this.success = new UserInfo_ttypes.User();
        this.success.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.uex = new UserInfo_ttypes.UserException();
        this.uex.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

UserAPI_signup_result.prototype.write = function(output) {
  output.writeStructBegin('UserAPI_signup_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.STRUCT, 0);
    this.success.write(output);
    output.writeFieldEnd();
  }
  if (this.uex !== null && this.uex !== undefined) {
    output.writeFieldBegin('uex', Thrift.Type.STRUCT, 1);
    this.uex.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

UserAPI_signupWithFacebook_args = function(args) {
  this.fb_id = null;
  this.email = null;
  this.pic_url = null;
  if (args) {
    if (args.fb_id !== undefined) {
      this.fb_id = args.fb_id;
    }
    if (args.email !== undefined) {
      this.email = args.email;
    }
    if (args.pic_url !== undefined) {
      this.pic_url = args.pic_url;
    }
  }
};
UserAPI_signupWithFacebook_args.prototype = {};
UserAPI_signupWithFacebook_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRING) {
        this.fb_id = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRING) {
        this.email = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.STRING) {
        this.pic_url = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

UserAPI_signupWithFacebook_args.prototype.write = function(output) {
  output.writeStructBegin('UserAPI_signupWithFacebook_args');
  if (this.fb_id !== null && this.fb_id !== undefined) {
    output.writeFieldBegin('fb_id', Thrift.Type.STRING, 1);
    output.writeString(this.fb_id);
    output.writeFieldEnd();
  }
  if (this.email !== null && this.email !== undefined) {
    output.writeFieldBegin('email', Thrift.Type.STRING, 2);
    output.writeString(this.email);
    output.writeFieldEnd();
  }
  if (this.pic_url !== null && this.pic_url !== undefined) {
    output.writeFieldBegin('pic_url', Thrift.Type.STRING, 3);
    output.writeString(this.pic_url);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

UserAPI_signupWithFacebook_result = function(args) {
  this.success = null;
  this.uex = null;
  if (args instanceof UserInfo_ttypes.UserException) {
    this.uex = args;
    return;
  }
  if (args) {
    if (args.success !== undefined) {
      this.success = args.success;
    }
    if (args.uex !== undefined) {
      this.uex = args.uex;
    }
  }
};
UserAPI_signupWithFacebook_result.prototype = {};
UserAPI_signupWithFacebook_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.STRUCT) {
        this.success = new UserInfo_ttypes.User();
        this.success.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.uex = new UserInfo_ttypes.UserException();
        this.uex.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

UserAPI_signupWithFacebook_result.prototype.write = function(output) {
  output.writeStructBegin('UserAPI_signupWithFacebook_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.STRUCT, 0);
    this.success.write(output);
    output.writeFieldEnd();
  }
  if (this.uex !== null && this.uex !== undefined) {
    output.writeFieldBegin('uex', Thrift.Type.STRUCT, 1);
    this.uex.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

UserAPI_signupWithKakao_args = function(args) {
  this.ko_id = null;
  this.email = null;
  this.pic_url = null;
  if (args) {
    if (args.ko_id !== undefined) {
      this.ko_id = args.ko_id;
    }
    if (args.email !== undefined) {
      this.email = args.email;
    }
    if (args.pic_url !== undefined) {
      this.pic_url = args.pic_url;
    }
  }
};
UserAPI_signupWithKakao_args.prototype = {};
UserAPI_signupWithKakao_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRING) {
        this.ko_id = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRING) {
        this.email = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.STRING) {
        this.pic_url = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

UserAPI_signupWithKakao_args.prototype.write = function(output) {
  output.writeStructBegin('UserAPI_signupWithKakao_args');
  if (this.ko_id !== null && this.ko_id !== undefined) {
    output.writeFieldBegin('ko_id', Thrift.Type.STRING, 1);
    output.writeString(this.ko_id);
    output.writeFieldEnd();
  }
  if (this.email !== null && this.email !== undefined) {
    output.writeFieldBegin('email', Thrift.Type.STRING, 2);
    output.writeString(this.email);
    output.writeFieldEnd();
  }
  if (this.pic_url !== null && this.pic_url !== undefined) {
    output.writeFieldBegin('pic_url', Thrift.Type.STRING, 3);
    output.writeString(this.pic_url);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

UserAPI_signupWithKakao_result = function(args) {
  this.success = null;
  this.uex = null;
  if (args instanceof UserInfo_ttypes.UserException) {
    this.uex = args;
    return;
  }
  if (args) {
    if (args.success !== undefined) {
      this.success = args.success;
    }
    if (args.uex !== undefined) {
      this.uex = args.uex;
    }
  }
};
UserAPI_signupWithKakao_result.prototype = {};
UserAPI_signupWithKakao_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.STRUCT) {
        this.success = new UserInfo_ttypes.User();
        this.success.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.uex = new UserInfo_ttypes.UserException();
        this.uex.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

UserAPI_signupWithKakao_result.prototype.write = function(output) {
  output.writeStructBegin('UserAPI_signupWithKakao_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.STRUCT, 0);
    this.success.write(output);
    output.writeFieldEnd();
  }
  if (this.uex !== null && this.uex !== undefined) {
    output.writeFieldBegin('uex', Thrift.Type.STRUCT, 1);
    this.uex.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

UserAPI_signin_args = function(args) {
  this.token = null;
  if (args) {
    if (args.token !== undefined) {
      this.token = args.token;
    }
  }
};
UserAPI_signin_args.prototype = {};
UserAPI_signin_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRING) {
        this.token = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

UserAPI_signin_args.prototype.write = function(output) {
  output.writeStructBegin('UserAPI_signin_args');
  if (this.token !== null && this.token !== undefined) {
    output.writeFieldBegin('token', Thrift.Type.STRING, 1);
    output.writeString(this.token);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

UserAPI_signin_result = function(args) {
  this.success = null;
  this.uex = null;
  if (args instanceof UserInfo_ttypes.UserException) {
    this.uex = args;
    return;
  }
  if (args) {
    if (args.success !== undefined) {
      this.success = args.success;
    }
    if (args.uex !== undefined) {
      this.uex = args.uex;
    }
  }
};
UserAPI_signin_result.prototype = {};
UserAPI_signin_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.STRUCT) {
        this.success = new UserInfo_ttypes.User();
        this.success.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.uex = new UserInfo_ttypes.UserException();
        this.uex.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

UserAPI_signin_result.prototype.write = function(output) {
  output.writeStructBegin('UserAPI_signin_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.STRUCT, 0);
    this.success.write(output);
    output.writeFieldEnd();
  }
  if (this.uex !== null && this.uex !== undefined) {
    output.writeFieldBegin('uex', Thrift.Type.STRUCT, 1);
    this.uex.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

UserAPI_signout_args = function(args) {
  this.token = null;
  if (args) {
    if (args.token !== undefined) {
      this.token = args.token;
    }
  }
};
UserAPI_signout_args.prototype = {};
UserAPI_signout_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRING) {
        this.token = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

UserAPI_signout_args.prototype.write = function(output) {
  output.writeStructBegin('UserAPI_signout_args');
  if (this.token !== null && this.token !== undefined) {
    output.writeFieldBegin('token', Thrift.Type.STRING, 1);
    output.writeString(this.token);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

UserAPI_signout_result = function(args) {
  this.uex = null;
  if (args instanceof UserInfo_ttypes.UserException) {
    this.uex = args;
    return;
  }
  if (args) {
    if (args.uex !== undefined) {
      this.uex = args.uex;
    }
  }
};
UserAPI_signout_result.prototype = {};
UserAPI_signout_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.uex = new UserInfo_ttypes.UserException();
        this.uex.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

UserAPI_signout_result.prototype.write = function(output) {
  output.writeStructBegin('UserAPI_signout_result');
  if (this.uex !== null && this.uex !== undefined) {
    output.writeFieldBegin('uex', Thrift.Type.STRUCT, 1);
    this.uex.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

UserAPI_withdraw_args = function(args) {
  this.token = null;
  this.password = null;
  if (args) {
    if (args.token !== undefined) {
      this.token = args.token;
    }
    if (args.password !== undefined) {
      this.password = args.password;
    }
  }
};
UserAPI_withdraw_args.prototype = {};
UserAPI_withdraw_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRING) {
        this.token = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRING) {
        this.password = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

UserAPI_withdraw_args.prototype.write = function(output) {
  output.writeStructBegin('UserAPI_withdraw_args');
  if (this.token !== null && this.token !== undefined) {
    output.writeFieldBegin('token', Thrift.Type.STRING, 1);
    output.writeString(this.token);
    output.writeFieldEnd();
  }
  if (this.password !== null && this.password !== undefined) {
    output.writeFieldBegin('password', Thrift.Type.STRING, 2);
    output.writeString(this.password);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

UserAPI_withdraw_result = function(args) {
  this.uex = null;
  if (args instanceof UserInfo_ttypes.UserException) {
    this.uex = args;
    return;
  }
  if (args) {
    if (args.uex !== undefined) {
      this.uex = args.uex;
    }
  }
};
UserAPI_withdraw_result.prototype = {};
UserAPI_withdraw_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.uex = new UserInfo_ttypes.UserException();
        this.uex.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

UserAPI_withdraw_result.prototype.write = function(output) {
  output.writeStructBegin('UserAPI_withdraw_result');
  if (this.uex !== null && this.uex !== undefined) {
    output.writeFieldBegin('uex', Thrift.Type.STRUCT, 1);
    this.uex.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

UserAPI_getUserInfo_args = function(args) {
  this.token = null;
  if (args) {
    if (args.token !== undefined) {
      this.token = args.token;
    }
  }
};
UserAPI_getUserInfo_args.prototype = {};
UserAPI_getUserInfo_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRING) {
        this.token = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

UserAPI_getUserInfo_args.prototype.write = function(output) {
  output.writeStructBegin('UserAPI_getUserInfo_args');
  if (this.token !== null && this.token !== undefined) {
    output.writeFieldBegin('token', Thrift.Type.STRING, 1);
    output.writeString(this.token);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

UserAPI_getUserInfo_result = function(args) {
  this.success = null;
  this.uex = null;
  if (args instanceof UserInfo_ttypes.UserException) {
    this.uex = args;
    return;
  }
  if (args) {
    if (args.success !== undefined) {
      this.success = args.success;
    }
    if (args.uex !== undefined) {
      this.uex = args.uex;
    }
  }
};
UserAPI_getUserInfo_result.prototype = {};
UserAPI_getUserInfo_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.STRUCT) {
        this.success = new UserInfo_ttypes.User();
        this.success.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.uex = new UserInfo_ttypes.UserException();
        this.uex.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

UserAPI_getUserInfo_result.prototype.write = function(output) {
  output.writeStructBegin('UserAPI_getUserInfo_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.STRUCT, 0);
    this.success.write(output);
    output.writeFieldEnd();
  }
  if (this.uex !== null && this.uex !== undefined) {
    output.writeFieldBegin('uex', Thrift.Type.STRUCT, 1);
    this.uex.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

UserAPIClient = exports.Client = function(output, pClass) {
    this.output = output;
    this.pClass = pClass;
    this._seqid = 0;
    this._reqs = {};
};
UserAPIClient.prototype = {};
UserAPIClient.prototype.seqid = function() { return this._seqid; }
UserAPIClient.prototype.new_seqid = function() { return this._seqid += 1; }
UserAPIClient.prototype.signup = function(email, password, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_signup(email, password);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_signup(email, password);
  }
};

UserAPIClient.prototype.send_signup = function(email, password) {
  var output = new this.pClass(this.output);
  output.writeMessageBegin('signup', Thrift.MessageType.CALL, this.seqid());
  var args = new UserAPI_signup_args();
  args.email = email;
  args.password = password;
  args.write(output);
  output.writeMessageEnd();
  return this.output.flush();
};

UserAPIClient.prototype.recv_signup = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new UserAPI_signup_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.uex) {
    return callback(result.uex);
  }
  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('signup failed: unknown result');
};
UserAPIClient.prototype.signupWithFacebook = function(fb_id, email, pic_url, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_signupWithFacebook(fb_id, email, pic_url);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_signupWithFacebook(fb_id, email, pic_url);
  }
};

UserAPIClient.prototype.send_signupWithFacebook = function(fb_id, email, pic_url) {
  var output = new this.pClass(this.output);
  output.writeMessageBegin('signupWithFacebook', Thrift.MessageType.CALL, this.seqid());
  var args = new UserAPI_signupWithFacebook_args();
  args.fb_id = fb_id;
  args.email = email;
  args.pic_url = pic_url;
  args.write(output);
  output.writeMessageEnd();
  return this.output.flush();
};

UserAPIClient.prototype.recv_signupWithFacebook = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new UserAPI_signupWithFacebook_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.uex) {
    return callback(result.uex);
  }
  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('signupWithFacebook failed: unknown result');
};
UserAPIClient.prototype.signupWithKakao = function(ko_id, email, pic_url, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_signupWithKakao(ko_id, email, pic_url);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_signupWithKakao(ko_id, email, pic_url);
  }
};

UserAPIClient.prototype.send_signupWithKakao = function(ko_id, email, pic_url) {
  var output = new this.pClass(this.output);
  output.writeMessageBegin('signupWithKakao', Thrift.MessageType.CALL, this.seqid());
  var args = new UserAPI_signupWithKakao_args();
  args.ko_id = ko_id;
  args.email = email;
  args.pic_url = pic_url;
  args.write(output);
  output.writeMessageEnd();
  return this.output.flush();
};

UserAPIClient.prototype.recv_signupWithKakao = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new UserAPI_signupWithKakao_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.uex) {
    return callback(result.uex);
  }
  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('signupWithKakao failed: unknown result');
};
UserAPIClient.prototype.signin = function(token, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_signin(token);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_signin(token);
  }
};

UserAPIClient.prototype.send_signin = function(token) {
  var output = new this.pClass(this.output);
  output.writeMessageBegin('signin', Thrift.MessageType.CALL, this.seqid());
  var args = new UserAPI_signin_args();
  args.token = token;
  args.write(output);
  output.writeMessageEnd();
  return this.output.flush();
};

UserAPIClient.prototype.recv_signin = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new UserAPI_signin_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.uex) {
    return callback(result.uex);
  }
  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('signin failed: unknown result');
};
UserAPIClient.prototype.signout = function(token, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_signout(token);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_signout(token);
  }
};

UserAPIClient.prototype.send_signout = function(token) {
  var output = new this.pClass(this.output);
  output.writeMessageBegin('signout', Thrift.MessageType.CALL, this.seqid());
  var args = new UserAPI_signout_args();
  args.token = token;
  args.write(output);
  output.writeMessageEnd();
  return this.output.flush();
};

UserAPIClient.prototype.recv_signout = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new UserAPI_signout_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.uex) {
    return callback(result.uex);
  }
  callback(null)
};
UserAPIClient.prototype.withdraw = function(token, password, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_withdraw(token, password);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_withdraw(token, password);
  }
};

UserAPIClient.prototype.send_withdraw = function(token, password) {
  var output = new this.pClass(this.output);
  output.writeMessageBegin('withdraw', Thrift.MessageType.CALL, this.seqid());
  var args = new UserAPI_withdraw_args();
  args.token = token;
  args.password = password;
  args.write(output);
  output.writeMessageEnd();
  return this.output.flush();
};

UserAPIClient.prototype.recv_withdraw = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new UserAPI_withdraw_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.uex) {
    return callback(result.uex);
  }
  callback(null)
};
UserAPIClient.prototype.getUserInfo = function(token, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_getUserInfo(token);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_getUserInfo(token);
  }
};

UserAPIClient.prototype.send_getUserInfo = function(token) {
  var output = new this.pClass(this.output);
  output.writeMessageBegin('getUserInfo', Thrift.MessageType.CALL, this.seqid());
  var args = new UserAPI_getUserInfo_args();
  args.token = token;
  args.write(output);
  output.writeMessageEnd();
  return this.output.flush();
};

UserAPIClient.prototype.recv_getUserInfo = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new UserAPI_getUserInfo_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.uex) {
    return callback(result.uex);
  }
  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('getUserInfo failed: unknown result');
};
UserAPIProcessor = exports.Processor = function(handler) {
  this._handler = handler
}
UserAPIProcessor.prototype.process = function(input, output) {
  var r = input.readMessageBegin();
  if (this['process_' + r.fname]) {
    return this['process_' + r.fname].call(this, r.rseqid, input, output);
  } else {
    input.skip(Thrift.Type.STRUCT);
    input.readMessageEnd();
    var x = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN_METHOD, 'Unknown function ' + r.fname);
    output.writeMessageBegin(r.fname, Thrift.MessageType.EXCEPTION, r.rseqid);
    x.write(output);
    output.writeMessageEnd();
    output.flush();
  }
}

UserAPIProcessor.prototype.process_signup = function(seqid, input, output) {
  var args = new UserAPI_signup_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.signup.length === 2) {
    Q.fcall(this._handler.signup, args.email, args.password)
      .then(function(result) {
        var result = new UserAPI_signup_result({success: result});
        output.writeMessageBegin("signup", Thrift.MessageType.REPLY, seqid);
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      }, function (err) {
        var result = new UserAPI_signup_result(err);
        output.writeMessageBegin("signup", Thrift.MessageType.REPLY, seqid);
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      });
  } else {
    this._handler.signup(args.email, args.password,  function (err, result) {
      var result = new UserAPI_signup_result((err != null ? err : {success: result}));
      output.writeMessageBegin("signup", Thrift.MessageType.REPLY, seqid);
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
}

UserAPIProcessor.prototype.process_signupWithFacebook = function(seqid, input, output) {
  var args = new UserAPI_signupWithFacebook_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.signupWithFacebook.length === 3) {
    Q.fcall(this._handler.signupWithFacebook, args.fb_id, args.email, args.pic_url)
      .then(function(result) {
        var result = new UserAPI_signupWithFacebook_result({success: result});
        output.writeMessageBegin("signupWithFacebook", Thrift.MessageType.REPLY, seqid);
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      }, function (err) {
        var result = new UserAPI_signupWithFacebook_result(err);
        output.writeMessageBegin("signupWithFacebook", Thrift.MessageType.REPLY, seqid);
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      });
  } else {
    this._handler.signupWithFacebook(args.fb_id, args.email, args.pic_url,  function (err, result) {
      var result = new UserAPI_signupWithFacebook_result((err != null ? err : {success: result}));
      output.writeMessageBegin("signupWithFacebook", Thrift.MessageType.REPLY, seqid);
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
}

UserAPIProcessor.prototype.process_signupWithKakao = function(seqid, input, output) {
  var args = new UserAPI_signupWithKakao_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.signupWithKakao.length === 3) {
    Q.fcall(this._handler.signupWithKakao, args.ko_id, args.email, args.pic_url)
      .then(function(result) {
        var result = new UserAPI_signupWithKakao_result({success: result});
        output.writeMessageBegin("signupWithKakao", Thrift.MessageType.REPLY, seqid);
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      }, function (err) {
        var result = new UserAPI_signupWithKakao_result(err);
        output.writeMessageBegin("signupWithKakao", Thrift.MessageType.REPLY, seqid);
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      });
  } else {
    this._handler.signupWithKakao(args.ko_id, args.email, args.pic_url,  function (err, result) {
      var result = new UserAPI_signupWithKakao_result((err != null ? err : {success: result}));
      output.writeMessageBegin("signupWithKakao", Thrift.MessageType.REPLY, seqid);
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
}

UserAPIProcessor.prototype.process_signin = function(seqid, input, output) {
  var args = new UserAPI_signin_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.signin.length === 1) {
    Q.fcall(this._handler.signin, args.token)
      .then(function(result) {
        var result = new UserAPI_signin_result({success: result});
        output.writeMessageBegin("signin", Thrift.MessageType.REPLY, seqid);
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      }, function (err) {
        var result = new UserAPI_signin_result(err);
        output.writeMessageBegin("signin", Thrift.MessageType.REPLY, seqid);
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      });
  } else {
    this._handler.signin(args.token,  function (err, result) {
      var result = new UserAPI_signin_result((err != null ? err : {success: result}));
      output.writeMessageBegin("signin", Thrift.MessageType.REPLY, seqid);
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
}

UserAPIProcessor.prototype.process_signout = function(seqid, input, output) {
  var args = new UserAPI_signout_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.signout.length === 1) {
    Q.fcall(this._handler.signout, args.token)
      .then(function(result) {
        var result = new UserAPI_signout_result({success: result});
        output.writeMessageBegin("signout", Thrift.MessageType.REPLY, seqid);
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      }, function (err) {
        var result = new UserAPI_signout_result(err);
        output.writeMessageBegin("signout", Thrift.MessageType.REPLY, seqid);
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      });
  } else {
    this._handler.signout(args.token,  function (err, result) {
      var result = new UserAPI_signout_result((err != null ? err : {success: result}));
      output.writeMessageBegin("signout", Thrift.MessageType.REPLY, seqid);
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
}

UserAPIProcessor.prototype.process_withdraw = function(seqid, input, output) {
  var args = new UserAPI_withdraw_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.withdraw.length === 2) {
    Q.fcall(this._handler.withdraw, args.token, args.password)
      .then(function(result) {
        var result = new UserAPI_withdraw_result({success: result});
        output.writeMessageBegin("withdraw", Thrift.MessageType.REPLY, seqid);
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      }, function (err) {
        var result = new UserAPI_withdraw_result(err);
        output.writeMessageBegin("withdraw", Thrift.MessageType.REPLY, seqid);
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      });
  } else {
    this._handler.withdraw(args.token, args.password,  function (err, result) {
      var result = new UserAPI_withdraw_result((err != null ? err : {success: result}));
      output.writeMessageBegin("withdraw", Thrift.MessageType.REPLY, seqid);
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
}

UserAPIProcessor.prototype.process_getUserInfo = function(seqid, input, output) {
  var args = new UserAPI_getUserInfo_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.getUserInfo.length === 1) {
    Q.fcall(this._handler.getUserInfo, args.token)
      .then(function(result) {
        var result = new UserAPI_getUserInfo_result({success: result});
        output.writeMessageBegin("getUserInfo", Thrift.MessageType.REPLY, seqid);
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      }, function (err) {
        var result = new UserAPI_getUserInfo_result(err);
        output.writeMessageBegin("getUserInfo", Thrift.MessageType.REPLY, seqid);
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      });
  } else {
    this._handler.getUserInfo(args.token,  function (err, result) {
      var result = new UserAPI_getUserInfo_result((err != null ? err : {success: result}));
      output.writeMessageBegin("getUserInfo", Thrift.MessageType.REPLY, seqid);
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
}

